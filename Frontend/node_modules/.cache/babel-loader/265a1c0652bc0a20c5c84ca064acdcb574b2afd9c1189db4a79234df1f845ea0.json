{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\nexport function getToken() {\n  return localStorage.getItem('token') || '';\n}\nexport function setToken(t) {\n  if (t) localStorage.setItem('token', t);\n}\nexport async function apiGet(path) {\n  const res = await fetch(`${API_BASE}${path}`, {\n    headers: {\n      'Authorization': 'Bearer ' + getToken()\n    }\n  });\n  const data = await res.json().catch(() => ({}));\n  if (!res.ok) throw new Error(data.message || 'Request failed');\n  return data;\n}\nexport async function apiPost(path, body) {\n  const res = await fetch(`${API_BASE}${path}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + getToken()\n    },\n    body: JSON.stringify(body)\n  });\n  const data = await res.json().catch(() => ({}));\n  if (!res.ok) throw new Error(data.message || 'Request failed');\n  return data;\n}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_BASE","getToken","localStorage","getItem","setToken","t","setItem","apiGet","path","res","fetch","headers","data","json","catch","ok","Error","message","apiPost","body","method","JSON","stringify"],"sources":["C:/Projectqldc/Frontend/src/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem('token') || '';\r\n}\r\n\r\nexport function setToken(t) {\r\n  if (t) localStorage.setItem('token', t);\r\n}\r\n\r\nexport async function apiGet(path) {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    headers: { 'Authorization': 'Bearer ' + getToken() }\r\n  });\r\n  const data = await res.json().catch(() => ({}));\r\n  if (!res.ok) throw new Error(data.message || 'Request failed');\r\n  return data;\r\n}\r\n\r\nexport async function apiPost(path, body) {\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type':'application/json',\r\n      'Authorization':'Bearer ' + getToken()\r\n    },\r\n    body: JSON.stringify(body)\r\n  });\r\n  const data = await res.json().catch(() => ({}));\r\n  if (!res.ok) throw new Error(data.message || 'Request failed');\r\n  return data;\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAE1E,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;AAC5C;AAEA,OAAO,SAASC,QAAQA,CAACC,CAAC,EAAE;EAC1B,IAAIA,CAAC,EAAEH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,CAAC,CAAC;AACzC;AAEA,OAAO,eAAeE,MAAMA,CAACC,IAAI,EAAE;EACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGb,QAAQ,GAAGW,IAAI,EAAE,EAAE;IAC5CG,OAAO,EAAE;MAAE,eAAe,EAAE,SAAS,GAAGV,QAAQ,CAAC;IAAE;EACrD,CAAC,CAAC;EACF,MAAMW,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,gBAAgB,CAAC;EAC9D,OAAOL,IAAI;AACb;AAEA,OAAO,eAAeM,OAAOA,CAACV,IAAI,EAAEW,IAAI,EAAE;EACxC,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGb,QAAQ,GAAGW,IAAI,EAAE,EAAE;IAC5CY,MAAM,EAAE,MAAM;IACdT,OAAO,EAAE;MACP,cAAc,EAAC,kBAAkB;MACjC,eAAe,EAAC,SAAS,GAAGV,QAAQ,CAAC;IACvC,CAAC;IACDkB,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,CAAC;EACF,MAAMP,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,gBAAgB,CAAC;EAC9D,OAAOL,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}